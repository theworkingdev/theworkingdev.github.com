I"…<p>An Android Toast is a small message displayed on the screen, similar to a tool tip or other similar popup notification. A Toast is displayed on top of the main content of an activity, and only remains visible for a short time period; a sample Toast message is shown on figure 1.</p>

<!-- ![](/images/android-simple-toast-example.jpg) -->

<figure style="margin-right:auto; margin-left:auto; width:20rem;">
<img src="/images/android-simple-toast-example.jpg" />
<figcaption>Figure 1. Toast Message</figcaption>
</figure>

<p><strong>Listing 1. Toast example</strong></p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nn">javax.swing.text.View</span>
<span class="k">import</span> <span class="nn">android.widget.Toast</span>
 
<span class="kd">class</span> <span class="nc">MainActivity</span> <span class="p">{</span>
  <span class="k">fun</span> <span class="nf">whenClicked</span><span class="p">(</span><span class="n">v</span><span class="p">:</span><span class="nc">View</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">t</span> <span class="p">=</span> <span class="nc">Toast</span><span class="p">.</span><span class="nf">maketext</span><span class="p">(</span><span class="k">this</span><span class="nd">@MainActivity</span><span class="p">,</span>  <span class="err">‚Äú</span><span class="nc">Hello</span><span class="err">‚Äù</span><span class="p">,</span> <span class="nc">Toast</span><span class="p">.</span><span class="nc">LENGTH_LONG</span><span class="p">)</span>
    <span class="n">t</span><span class="p">.</span> <span class="nf">show</span><span class="p">()</span>
  <span class="p">}</span>
<span class="p">}</span> 
</code></pre></div></div>

<p><strong>Toast.maketext</strong> takes three params, they are</p>

<ol>
  <li>Application Context, in our example this is the MainActivity‚Äôs context, we can write it as  <strong>this@MainActivity</strong></li>
  <li>The <strong>String</strong> message you‚Äôd like to show, and finally</li>
  <li>How long do you want to show the message. This is an integer value, but you should use the constants of the Toast class</li>
</ol>

<p>You need to call <strong>show()</strong> on the Toast object to make it visible to the user. The Toast message disappears after some timeout.</p>

<p>There‚Äôs an even easier way to use Toast, and that is by using the Anko library.  This library is written in Kotlin (by Jetbrains, the same guys who created Kotlin). Anko does a lot of things, you can find out more about it on the <a href="https://github.com/Kotlin/anko/wiki/Anko-Commons-%E2%80%93-Dialogs">GitHub page for Anko.</a> For now, let‚Äôs just use it for Toast.</p>

<p>First, you need to add the Anko dependency to your project. Add it to your build.gradle file (module level), like this</p>

<div class="language-gradle highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">dependencies</span> <span class="o">{</span>
  <span class="o">....</span>
  <span class="n">implementation</span> <span class="s1">'org.jetbrains.anko:anko-common:0.9'</span>
<span class="o">}</span>
</code></pre></div></div>

<p>After that, you can use Toast like this</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">toast</span><span class="p">(</span><span class="s">"Hello"</span><span class="p">)</span>
<span class="nf">toast</span><span class="p">(</span><span class="nc">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">message</span><span class="p">)</span>
<span class="nf">longToast</span><span class="p">(</span><span class="s">"Heeeeelllllllllllooooo"</span><span class="p">)</span>
</code></pre></div></div>

<!-- <p>
  This article is excerpted from the book <a target="" href="https://www.apress.com/gp/book/9781484239063">Learn Android Studio 3 with Kotlin</a>
</p>
<img src="/images/book_las3_kotlin.png" alt="Learn Android Studio 3 with Kotlin"> -->

<div class="card" style="width: 22rem;">
  <img src="/images/book_las3_kotlin.png" class="card-img-top" alt="Learn Android Studio 3 with Kotlin" />
  <div class="card-body">
    <h5 class="card-title">Learn Android Studio 3 with Kotlin</h5>
    <p class="card-text">Learn more. See more code samples like this</p>
    <a target="_blank" href="https://www.apress.com/gp/book/9781484239063" class="btn btn-primary">
      Get the book</a>
  </div>
</div>
:ET