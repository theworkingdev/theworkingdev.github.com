I"Ê<p>The following snippet shows how to read from a file in the internal storage (standard location, not cache).</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">val</span> <span class="py">filename</span> <span class="p">=</span> <span class="s">"ourfile.txt"</span>
<span class="kd">val</span> <span class="py">input</span> <span class="p">=</span> <span class="nf">openFileInput</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span> <span class="c1">// (1)</span>

<span class="n">input</span><span class="p">.</span><span class="nf">use</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="py">buffer</span> <span class="p">=</span> <span class="nc">StringBuilder</span><span class="p">()</span> <span class="c1">// (2)</span>
  <span class="kd">var</span> <span class="py">bytes_read</span> <span class="p">=</span> <span class="n">input</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span> <span class="c1">// (3)</span>
  <span class="k">while</span><span class="p">(</span><span class="n">bytes_read</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// (4)</span>
    <span class="n">buffer</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">bytes_read</span><span class="p">.</span><span class="nf">toChar</span><span class="p">())</span>  <span class="c1">//(5)</span>
    <span class="n">bytes_read</span> <span class="p">=</span> <span class="n">input</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span> <span class="c1">// (6)</span>
  <span class="p">}</span>
  <span class="nf">println</span><span class="p">(</span><span class="n">buffer</span><span class="p">.</span><span class="nf">toString</span><span class="p">())</span> <span class="c1">// (7)</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>(1)</strong> openFileInput returns a FileInputStream, this is the object we need so can read from a file. The only parameter it takes, is the name of the file to read</p>

<p><strong>(2)</strong> We wonâ€™t be able to read the entire file in one fell swoop. Weâ€™ll read it by chunks. As we get some chunks, weâ€™ll store them inside the StringBuilder object</p>

<p><strong>(3)</strong> The read method reads a byte of data from the input stream and returns it as an integer. We need to keep reading from the stream one byte at a time until we reach the end of file (EOF) marker</p>

<p><strong>(4)</strong> When there is no more bytes to read from the file, the EOF is marked as -1. We will use as the condition for our loop. Weâ€™ll just keep on reading until we reach EOF</p>

<p><strong>(5)</strong> The read method returns an int; itâ€™s the ASCII value of each letter in the file, represented as integer. We have to convert it to a Char before we can put it in the StringBuilder</p>

<p><strong>(6)</strong> If weâ€™re not at EOF yet, letâ€™s read another byte</p>

<p><strong>(7)</strong> When we run out of bytes to read, weâ€™ll get out of the loop and print the content of StringBuilder</p>

:ET