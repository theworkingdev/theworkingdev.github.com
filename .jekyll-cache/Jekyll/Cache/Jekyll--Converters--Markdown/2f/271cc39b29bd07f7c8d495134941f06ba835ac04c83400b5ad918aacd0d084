I"?<p>Kotlin’s approach to exception is similar to Java. Somewhat. It uses the <em>try-catch-finally</em>, just like in Java. So, your knowledge about how <em>try-catch</em> works commutes nicely to Kotlin. The code below should be very familiar. It shows a typical code on how to open a file</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nn">java.io.FileNotFoundException</span>
<span class="k">import</span> <span class="nn">java.io.FileReader</span>
<span class="k">import</span> <span class="nn">java.io.IOException</span>

<span class="k">fun</span> <span class="nf">main</span><span class="p">(</span><span class="n">args</span><span class="p">:</span> <span class="nc">Array</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">&gt;)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="py">fileReader</span><span class="p">:</span> <span class="nc">FileReader</span>
    <span class="k">try</span> <span class="p">{</span>
    <span class="n">fileReader</span> <span class="p">=</span> <span class="nc">FileReader</span><span class="p">(</span><span class="s">"README.txt"</span><span class="p">)</span>
    <span class="kd">var</span> <span class="py">content</span> <span class="p">=</span> <span class="n">fileReader</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span>
    <span class="nf">println</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
 <span class="p">}</span>
  <span class="k">catch</span> <span class="p">(</span><span class="n">ffe</span><span class="p">:</span> <span class="nc">FileNotFoundException</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">println</span><span class="p">(</span><span class="n">ffe</span><span class="p">.</span><span class="n">message</span><span class="p">)</span>
  <span class="p">}</span>
  <span class="k">catch</span><span class="p">(</span><span class="n">ioe</span><span class="p">:</span> <span class="nc">IOException</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">println</span><span class="p">(</span><span class="n">ioe</span><span class="p">.</span><span class="n">message</span><span class="p">)</span>
 <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>So, what’s different? Well, in Kotlin, everything is an <em>unchecked exception</em>. Which means, the try-catch block is optional. It’s up to the programmer if you want to use it. So, the code above, can be written like this (in Kotlin).</p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nn">java.io.FileReader</span>  

<span class="k">fun</span> <span class="nf">main</span><span class="p">(</span><span class="n">args</span><span class="p">:</span> <span class="nc">Array</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">&gt;)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="py">fileReader</span> <span class="p">=</span> <span class="nc">FileReader</span><span class="p">(</span><span class="s">"README.txt"</span><span class="p">)</span>  
  <span class="kd">var</span> <span class="py">content</span> <span class="p">=</span> <span class="n">fileReader</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span>  
  <span class="nf">println</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<p>So how do you know if you need to use try-catch. You might not like the answers now, but in the long run, these are good advice to follow ;</p>

<ol>
  <li>You have to know the API’s you’re using. I know that this is not great news for beginners, but look at it this way, you won’t be a beginner for long. And you really should know the API’s you’re using. TL;DR won’t serve you well in this area</li>
  <li>You have to get into the habit of unit-testing your code. This is a good habit to develop anyway</li>
</ol>

<!-- <p>
  This article is excerpted from the book <a target="" href="https://www.apress.com/gp/book/9781484239063">Learn Android Studio 3 with Kotlin</a>
</p>
<img src="/images/book_las3_kotlin.png" alt="Learn Android Studio 3 with Kotlin"> -->

<div class="card" style="width: 28rem;">
  <img src="/images/book_las3_kotlin.png" class="card-img-top" alt="Learn Android Studio 3 with Kotlin" />
  <div class="card-body">
    <h5 class="card-title">Learn Android Studio 3 with Kotlin</h5>
    <p class="card-text">Learn more. See more code samples like this</p>
    <a target="_blank" href="https://www.apress.com/gp/book/9781484239063" class="btn btn-primary">
      Get the book</a>
  </div>
</div>
:ET